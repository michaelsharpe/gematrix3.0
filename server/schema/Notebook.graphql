type Notebook {
  id: ObjID!
  title: String!
  description: String!
  user: User!
  words(lastCreatedAt: Float, limit: Int): [Word]
  notes(lastCreatedAt: Float, limit: Int): [Note]
  createdAt: Float!
  updatedAt: Float!
}

extend type Query {
  notebooks(lastCreatedAt: Float, limit: Int): [Notebook!]
  notebook(id: ObjID!): Notebook
}

input CreateNotebookInput {
  title: String!
  description: String!
  userId: ObjID!
}

input UpdateNotebookInput {
  title: String!
  description: String!
  userId: ObjID!
}

extend type Mutation {
  createNotebook(input: CreateNotebookInput!): Notebook
  updateNotebook(id: ObjID!, input: UpdateNotebookInput!): Notebook
  removeNotebook(id: ObjID!): Boolean
}

extend type Subscription {
  notebookCreated: Notebook
  notebookUpdated: Notebook
  notebookRemoved: ObjID
}
